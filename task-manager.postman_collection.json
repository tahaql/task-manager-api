{
  "info": {
    "name": "Task Manager API",
    "_postman_id": "b8a3b612-1e5f-4c6d-8bbf-2a4f0a39c1a7",
    "description": "Collection for testing Task Manager project with JWT auth and refresh token",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Register User",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"reza\",\n  \"email\": \"reza@example.com\",\n  \"password\": \"123456\"\n}",
          "options": { "raw": { "language": "json" } }
        },
        "url": { "raw": "http://localhost:3000/api/auth/register", "protocol": "http", "host": ["localhost"], "port": "3000", "path": ["api", "auth", "register"] }
      }
    },
    {
      "name": "Login User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const data = pm.response.json();",
              "pm.environment.set(\"access_token\", data.accessToken);",
              "pm.environment.set(\"refresh_token\", data.refreshToken);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json", "type": "text" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"reza@example.com\",\n  \"password\": \"123456\"\n}",
          "options": { "raw": { "language": "json" } }
        },
        "url": { "raw": "http://localhost:3000/api/auth/login", "protocol": "http", "host": ["localhost"], "port": "3000", "path": ["api", "auth", "login"] }
      }
    },
    {
      "name": "Create Task",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}", "type": "text" },
          { "key": "Content-Type", "value": "application/json", "type": "text" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Finish backend project\",\n  \"description\": \"This is a detailed description for the backend task\"\n}"
        },
        "url": { "raw": "http://localhost:3000/api/tasks", "protocol": "http", "host": ["localhost"], "port": "3000", "path": ["api", "tasks"] }
      }
    },
    {
      "name": "Get Tasks",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}", "type": "text" }
        ],
        "url": { "raw": "http://localhost:3000/api/tasks", "protocol": "http", "host": ["localhost"], "port": "3000", "path": ["api", "tasks"] }
      }
    },
    {
      "name": "Update Task",
      "request": {
        "method": "PUT",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}", "type": "text" },
          { "key": "Content-Type", "value": "application/json", "type": "text" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Updated title\",\n  \"completed\": true,\n  \"description\": \"Updated task description\"\n}"
        },
        "url": { "raw": "http://localhost:3000/api/tasks/{{task_id}}", "protocol": "http", "host": ["localhost"], "port": "3000", "path": ["api", "tasks", "{{task_id}}"] }
      }
    },
    {
      "name": "Delete Task",
      "request": {
        "method": "DELETE",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}", "type": "text" }
        ],
        "url": { "raw": "http://localhost:3000/api/tasks/{{task_id}}", "protocol": "http", "host": ["localhost"], "port": "3000", "path": ["api", "tasks", "{{task_id}}"] }
      }
    },
    {
      "name": "Refresh Token",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const data = pm.response.json();",
              "pm.environment.set(\"access_token\", data.accessToken);",
              "pm.environment.set(\"refresh_token\", data.refreshToken);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json", "type": "text" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
        },
        "url": { "raw": "http://localhost:3000/api/auth/refresh", "protocol": "http", "host": ["localhost"], "port": "3000", "path": ["api", "auth", "refresh"] }
      }
    },
    {
      "name": "Logout",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.environment.unset(\"access_token\");",
              "pm.environment.unset(\"refresh_token\");"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json", "type": "text" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
        },
        "url": { "raw": "http://localhost:3000/api/auth/logout", "protocol": "http", "host": ["localhost"], "port": "3000", "path": ["api", "auth", "logout"] }
      }
    },
    {
      "name": "Get All Users (Admin Only)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:3000/api/admin/users",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "admin", "users"]
        }
      }
    },
    {
      "name": "Delete All Users (Admin)",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:3000/api/admin/all",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "admin", "all"]
        }
      }
    },
    {
      "name": "Get User Count (Admin)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:3000/api/admin/users/count",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "admin", "users", "count"]
        }
      }
    },
    {
      "name": "Update User Role (Admin)",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"role\": \"admin\"\n}"
        },
        "url": {
          "raw": "http://localhost:3000/api/admin/users/{{user_id}}/role",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "admin", "users", "{{user_id}}", "role"]
        }
      }
    },
    {
      "name": "Delete User by ID (Admin)",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "http://localhost:3000/api/admin/users/{{user_id}}",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "admin", "users", "{{user_id}}"]
        }
      }
    }
  ]
}